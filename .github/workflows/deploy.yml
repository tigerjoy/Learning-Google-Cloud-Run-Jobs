name: Deploy Cloud Run Jobs

on:
  push:
    branches: ["main"]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  REPO_NAME: cloud-run-jobs
  IMAGE_NAME: jobs-image
  WORKER_JOB_NAME: ${{ env.WORKER_JOB_NAME }}
  TOTAL_TASK_COUNT: ${{ env.TOTAL_TASK_COUNT }}
  PARALLEL_TASKS: ${{ env.PARALLEL_TASKS }}

jobs:
  deploy:
    environment: PRODUCTION # <-- this links to your PRODUCTION environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      - name: Build and push image
        run: |
          # Full image URI
          IMAGE_URI=$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:latest

          # Check if Artifact Registry repo exists
          REPO_EXISTS=$(gcloud artifacts repositories list --location=$REGION --filter="name:$REPO_NAME" --format="value(name)")

          if [ -z "$REPO_EXISTS" ]; then
            echo "Repository $REPO_NAME does not exist. Creating..."
            gcloud artifacts repositories create $REPO_NAME \
              --repository-format=docker \
              --location=$REGION \
              --description="Docker images for Cloud Run Jobs"
          else
            echo "Repository $REPO_NAME already exists."
          fi

          # Build and push Docker image
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

          # Save IMAGE_URI for next steps
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Deploy Worker Job
        run: |
          gcloud run jobs describe worker-job --region $REGION || EXISTS=false
          if [ "$EXISTS" = false ]; then
            gcloud run jobs create worker-job \
              --image $IMAGE_URI \
              --region $REGION \
              --tasks=1 \
              --parallelism=$PARALLEL_TASKS \
              --command "node" \
              --args "worker.js"
          else
            gcloud run jobs update worker-job \
              --image $IMAGE_URI \
              --region $REGION \
              --command "node" \
              --args "worker.js"
          fi

      - name: Deploy Dispatcher Job
        run: |
          gcloud run jobs describe dispatcher-job --region $REGION || EXISTS=false
          if [ "$EXISTS" = false ]; then
            gcloud run jobs create dispatcher-job \
              --image $IMAGE_URI \
              --region $REGION \
              --tasks=1 \
              --parallelism=1 \
              --command "node" \
              --args "job-dispatcher.js" \
              --set-env-vars PROJECT_ID=$PROJECT_ID,REGION=$REGION,WORKER_JOB_NAME=$WORKER_JOB_NAME,TOTAL_TASK_COUNT=$TOTAL_TASK_COUNT,PARALLEL_TASKS=$PARALLEL_TASKS
          else
            gcloud run jobs update dispatcher-job \
              --image $IMAGE_URI \
              --region $REGION \
              --command "node" \
              --args "job-dispatcher.js" \
              --set-env-vars PROJECT_ID=$PROJECT_ID,REGION=$REGION,WORKER_JOB_NAME=$WORKER_JOB_NAME,TOTAL_TASK_COUNT=$TOTAL_TASK_COUNT,PARALLEL_TASKS=$PARALLEL_TASKS
          fi
